#!/usr/bin/env ruby

$:.unshift(File.dirname(__FILE__) + '/../lib')

require 'smith'
require 'trollop'
require 'smith/application/agency'
require 'daemons/daemonize'

include Daemonize

opts = Trollop::options do
  opt :agents_dir,   "directory containing the agents", :type => :string, :required => true
  opt :logging,      "logging config file", :type => :string, :required => true
  opt :daemon,       "daemonise", :default => false
  opt :amqp_logging, "turn amqp logging on", :default => false
  opt :fdsize,       "max number of file descriptors", :type => :integer, :default => 1024
end

agents = ARGV

opts[:logging] = File.expand_path(opts[:logging])
opts[:agents_dir] = File.expand_path(opts[:agents_dir])

Logging.configure(opts[:logging])
logger = Logging::Logger['audit']

daemonize('/tmp/log') if opts[:daemon]

EM.epoll
EM.set_descriptor_table_size(opts[:fdsize])

EM.run do
  AMQP.logging = true if opts[:amqp_logging]

  agency = Agency.new(opts.merge(:logger => logger))

  if agency.write_pid_file

    at_exit { agency.unlink_pid_file }
    agency.setup_signal_handlers
    agency.setup_queue_handlers

    start_agent = proc { |agent|
      puts "Starting #{agent}"
      RubyMAS::Messaging.new(:manage).send_message(agent)
    }

    EM::Iterator.new(agents).each(start_agent)
  else
    puts "Agency is already running"
    exit
  end
end
